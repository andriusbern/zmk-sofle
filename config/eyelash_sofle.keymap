#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&lt {
    tapping-term-ms = <125>;
    flavor = "hold-preferred";
    bindings = <&mo>, <&kp>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    new_behavior: new_behavior {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <25>;
        label = "NEW_BEHAVIOR";
    };

    dash_tap: dash_tap {
        compatible = "zmk,behavior-tap-dance";
        label = "DASH_TAP";
        #binding-cells = <0>;
        bindings = <&kp MINUS>, <&kp EQUAL>;

        tapping-term-ms = <75>;
    };

    slash_tap: slash_tap {
        compatible = "zmk,behavior-tap-dance";
        label = "SLASH_TAP";
        #binding-cells = <0>;
        tapping-term-ms = <75>;
        bindings = <&kp SLASH>, <&kp PIPE>, <&kp BACKSLASH>;
    };

    left_bracket: left_bracket {
        compatible = "zmk,behavior-tap-dance";
        label = "LEFT_BRACKET";
        #binding-cells = <0>;
        tapping-term-ms = <75>;
        bindings = <&kp LEFT_PARENTHESIS>, <&kp LEFT_BRACKET>, <&kp LEFT_BRACE>;
    };

    right_bracket: right_bracket {
        compatible = "zmk,behavior-tap-dance";
        label = "RIGHT_BRACKET";
        #binding-cells = <0>;
        tapping-term-ms = <75>;
        bindings =
            <&kp RIGHT_PARENTHESIS>,
            <&kp RIGHT_BRACKET>,
            <&kp RIGHT_BRACE>;
    };

    colon_semicolon: colon_semicolon {
        compatible = "zmk,behavior-tap-dance";
        label = "COLON_SEMICOLON";
        #binding-cells = <0>;
        bindings = <&kp SEMICOLON>, <&kp COLON>;

        tapping-term-ms = <75>;
    };

    macros {
        email: email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp A &kp N &kp D &kp R &kp I &kp U &kp S &kp DOT &kp B &kp E &kp R &kp N &kp A &kp T &kp A &kp V &kp I &kp C &kp I &kp U &kp S &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "EMAIL";
        };

        LIACSMail: LIACSMail {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp A &kp DOT &kp B &kp E &kp R &kp N &kp A &kp T &kp A &kp V &kp I &kp C &kp I &kp U &kp S &kp AT &kp L &kp I &kp A &kp C &kp S &kp DOT &kp L &kp E &kp I &kp D &kp E &kp N &kp U &kp N &kp I &kp V &kp DOT &kp N &kp L>;
            label = "LIACSMAIL";
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        Mac {
            bindings = <
&kp ESCAPE    &kp N1     &kp N2        &kp N3            &kp N4  &kp N5       &mmv MOVE_UP     &kp N6         &kp N7     &kp N8     &kp N9               &kp N0            &kp BACKSLASH
&kp TAB       &kp Q      &kp W         &kp E             &kp R   &kp T        &mmv MOVE_DOWN   &kp Y          &kp U      &kp I      &kp O                &kp P             &dash_tap
&lt 2 ESCAPE  &kp A      &kp S         &kp D             &kp F   &kp G        &mmv MOVE_LEFT   &kp H          &kp J      &kp K      &kp L                &colon_semicolon  &kp APOS
&kp LSHFT     &kp Z      &kp X         &kp C             &kp V   &kp B        &mmv MOVE_RIGHT  &kp N          &kp M      &kp COMMA  &kp DOT              &slash_tap        &kp RIGHT_SHIFT
&mkp RCLK     &kp LCTRL  &kp LEFT_ALT  &kp LEFT_COMMAND  &mo 1   &kp SPACE    &mkp LCLK        &kp BACKSPACE  &kp ENTER  &mo 1      &kp RG(RIGHT_SHIFT)  &kp DELETE
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE     &kp F1           &kp F2        &kp F3     &kp F4            &kp F5               &mmv MOVE_UP     &kp F6          &kp F7           &kp F8            &kp F9                &kp F10                &kp BACKSLASH
&trans        &kp EXCLAMATION  &kp AT_SIGN   &kp HASH   &kp DOLLAR        &kp PERCENT          &mmv MOVE_DOWN   &kp CARET       &kp AMPERSAND    &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PLUS
&lt 3 ESCAPE  &kp NUMBER_1     &kp NUMBER_2  &kp N3     &kp N4            &kp N5               &mmv MOVE_LEFT   &kp N6          &kp N7           &kp N8            &kp N9                &kp N0                 &kp EQUAL
&trans        &kp PLUS         &kp TILDE     &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET    &mmv MOVE_RIGHT  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp SLASH              &trans
&kp C_MUTE    &trans           &trans        &trans     &trans            &trans               &mkp LCLK        &trans          &trans           &trans            &trans                &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_2 {
            bindings = <
&kp ESCAPE     &kp F1          &kp F2          &kp F3           &kp F4           &kp F5        &mmv MOVE_UP     &kp F6         &kp F7          &kp F8          &kp F9           &kp F10      &kp F11
&kp BACKSPACE  &kp HOME        &kp UP_ARROW    &kp END          &none            &kp K_LOCK    &mmv MOVE_DOWN   &kp PAGE_UP    &kp HOME        &kp UP_ARROW    &kp END          &kp UNDER    &kp F12
&trans         &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PRINTSCREEN  &trans        &mmv MOVE_LEFT   &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LBRC     &kp RBRC
&trans         &kp DELETE      &kp PAGE_UP     &kp PAGE_DOWN    &trans           &trans        &mmv MOVE_RIGHT  &trans         &trans          &sys_reset      &soft_off        &bootloader  &trans
&trans         &trans          &trans          &trans           &mo 3            &kp ENTER     &mkp LCLK        &kp DELETE     &trans          &trans          &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        layer_3 {
            bindings = <
&trans  &bt BT_SEL 0    &bt BT_SEL 1       &bt BT_SEL 2        &bt BT_SEL 3          &bt BT_SEL 4         &rgb_ug RGB_EFF  &trans           &trans                            &trans                             &trans                            &trans                           &trans
&trans  &kp C_REWIND    &kp C_VOLUME_UP    &kp C_FAST_FORWARD  &rgb_ug RGB_TOG       &ext_power EP_TOG    &trans           &rgb_ug RGB_HUI  &rgb_ug RGB_HUD                   &trans                             &trans                            &trans                           &trans
&trans  &kp C_PREVIOUS  &kt C_VOLUME_DOWN  &kp C_NEXT          &kp C_BRIGHTNESS_INC  &out OUT_TOG         &trans           &rgb_ug RGB_SAI  &rgb_ug RGB_SAD                   &trans                             &trans                            &trans                           &trans
&trans  &kp C_STOP      &kp C_MUTE         &kp C_PLAY_PAUSE    &kp C_BRIGHTNESS_DEC  &sys_reset           &trans           &rgb_ug RGB_EFF  &rgb_ug RGB_COLOR_HSB(169,88,31)  &rgb_ug RGB_COLOR_HSB(286,100,50)  &rgb_ug RGB_COLOR_HSB(237,44,39)  &rgb_ug RGB_COLOR_HSB(32,64,69)  &trans
&tog 4  &trans          &trans             &trans              &trans                &trans               &trans           &trans           &trans                            &trans                             &trans                            &trans
            >;

            sensor-bindings = <&inc_dec_kp 0 0>;
        };

        Windows_linux {
            display-name = "LAYER0";
            bindings = <
&kp GRAVE     &kp N1        &kp N2        &kp N3            &kp N4  &kp N5       &mmv MOVE_UP     &kp N6         &kp N7     &kp N8     &kp N9                 &kp N0      &kp BACKSLASH
&kp TAB       &kp Q         &kp W         &kp E             &kp R   &kp T        &mmv MOVE_DOWN   &kp Y          &kp U      &kp I      &kp O                  &kp P       &kp MINUS
&lt 6 ESCAPE  &kp A         &kp S         &kp D             &kp F   &kp G        &mmv MOVE_LEFT   &kp H          &kp J      &kp K      &kp L                  &kp SEMI    &kp APOS
&kp LSHFT     &kp Z         &kp X         &kp C             &kp V   &kp B        &mmv MOVE_RIGHT  &kp N          &kp M      &kp COMMA  &kp DOT                &kp FSLH    &kp RIGHT_SHIFT
&mkp RCLK     &kp LEFT_ALT  &kp LEFT_GUI  &kp LEFT_CONTROL  &mo 5   &kp SPACE    &mkp LCLK        &kp BACKSPACE  &kp ENTER  &mo 5      &kp RS(RIGHT_CONTROL)  &kp DELETE
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_5 {
            display-name = "layer1";
            bindings = <
&kp GRAVE     &kp F1           &kp F2        &kp F3     &kp F4            &kp F5               &mmv MOVE_UP     &kp F6          &kp F7           &kp F8            &kp F9                &kp F10                &kp BACKSLASH
&trans        &kp EXCLAMATION  &kp AT_SIGN   &kp HASH   &kp DOLLAR        &kp PERCENT          &mmv MOVE_DOWN   &kp CARET       &kp AMPERSAND    &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PLUS
&lt 7 ESCAPE  &kp NUMBER_1     &kp NUMBER_2  &kp N3     &kp N4            &kp N5               &mmv MOVE_LEFT   &kp N6          &kp N7           &kp N8            &kp N9                &kp N0                 &kp EQUAL
&trans        &kp PLUS         &kp TILDE     &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET    &mmv MOVE_RIGHT  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp SLASH              &trans
&kp C_MUTE    &trans           &trans        &trans     &trans            &trans               &mkp LCLK        &trans          &trans           &trans            &trans                &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_6 {
            bindings = <
&kp ESCAPE     &kp F1          &kp F2          &kp F3           &kp F4           &kp F5        &mmv MOVE_UP     &kp F6         &kp F7          &kp F8          &kp F9           &kp F10      &kp F11
&kp BACKSPACE  &kp HOME        &kp UP_ARROW    &kp END          &none            &kp K_LOCK    &mmv MOVE_DOWN   &kp PAGE_UP    &kp HOME        &kp UP_ARROW    &kp END          &kp UNDER    &kp F12
&trans         &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PRINTSCREEN  &trans        &mmv MOVE_LEFT   &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LBRC     &kp RBRC
&trans         &kp DELETE      &kp PAGE_UP     &kp PAGE_DOWN    &trans           &trans        &mmv MOVE_RIGHT  &trans         &trans          &sys_reset      &soft_off        &bootloader  &trans
&tog 0         &trans          &trans          &trans           &mo 7            &kp ENTER     &mkp LCLK        &kp DELETE     &trans          &trans          &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        layer_7 {
            bindings = <
&trans  &bt BT_SEL 0    &bt BT_SEL 1       &bt BT_SEL 2        &bt BT_SEL 3          &bt BT_SEL 4         &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp C_REWIND    &kp C_VOLUME_UP    &kp C_FAST_FORWARD  &rgb_ug RGB_TOG       &ext_power EP_TOG    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp K_PREVIOUS  &kt K_VOLUME_DOWN  &kp C_NEXT          &kp C_BRIGHTNESS_INC  &out OUT_TOG         &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &kp C_MUTE         &kp K_PLAY_PAUSE    &kp C_BRIGHTNESS_DEC  &sys_reset           &trans  &trans  &trans  &trans  &trans  &trans  &trans
&tog 0  &trans          &trans             &trans              &trans                &trans               &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
