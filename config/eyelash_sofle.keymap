#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <10>;      // 0
    time-to-max-speed-ms = <50>;       // 300
    delay-ms = <(-25)>;                   // 0
    trigger-period-ms = <10>;
};

&mmv {
    time-to-max-speed-ms = <650>;
    acceleration-exponent = <2>;
    trigger-period-ms = <0>;
    delay-ms = <0>;
};

&lt {
    tapping-term-ms = <125>;
    flavor = "hold-preferred";
    bindings = <&mo>, <&kp>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    scroll_encoder2: scroll_encoder2 {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <25>;
        label = "SCROLL_ENCODER2";
    };

    dash_tap: dash_tap {
        compatible = "zmk,behavior-tap-dance";
        label = "DASH_TAP";
        #binding-cells = <0>;
        bindings = <&kp MINUS>, <&kp EQUAL>;

        tapping-term-ms = <150>;
    };

    slash_tap: slash_tap {
        compatible = "zmk,behavior-tap-dance";
        label = "SLASH_TAP";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp SLASH>, <&kp PIPE>, <&kp BACKSLASH>;
    };

    left_bracket: left_bracket {
        compatible = "zmk,behavior-tap-dance";
        label = "LEFT_BRACKET";
        #binding-cells = <0>;
        tapping-term-ms = <75>;
        bindings = <&kp LEFT_PARENTHESIS>, <&kp LEFT_BRACKET>, <&kp LEFT_BRACE>;
    };

    right_bracket: right_bracket {
        compatible = "zmk,behavior-tap-dance";
        label = "RIGHT_BRACKET";
        #binding-cells = <0>;
        tapping-term-ms = <75>;
        bindings =
            <&kp RIGHT_PARENTHESIS>,
            <&kp RIGHT_BRACKET>,
            <&kp RIGHT_BRACE>;
    };

    colon_semicolon: colon_semicolon {
        compatible = "zmk,behavior-tap-dance";
        label = "COLON_SEMICOLON";
        #binding-cells = <0>;
        bindings = <&kp COLON>, <&kp SEMI>;

        tapping-term-ms = <165>;
    };

    x_equal_tap: x_equal_tap {
        compatible = "zmk,behavior-tap-dance";
        label = "X_EQUAL_TAP";
        #binding-cells = <0>;
        tapping-term-ms = <225>;
        bindings = <&kp X>, <&kp EQUAL>;
    };

    minus_plus_tap: minus_plus_tap {
        compatible = "zmk,behavior-tap-dance";
        label = "MINUS_PLUS_TAP";
        #binding-cells = <0>;
        tapping-term-ms = <225>;
        bindings = <&kp MINUS>, <&kp PLUS>;
    };

    gravetap: gravetap {
        compatible = "zmk,behavior-tap-dance";
        label = "GRAVETAP";
        #binding-cells = <0>;
        bindings = <&kp GRAVE>, <&kp LG(RG(ESCAPE))>;

        tapping-term-ms = <150>;
    };

    HMR: HMR {
        compatible = "zmk,behavior-hold-tap";
        label = "HMR";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        flavor = "tap-preferred";
        quick-tap-ms = <125>;
        hold-trigger-key-positions = <0 1 3 2 4 5 18 31 44 56 57 55 43 30 17 13 14 15 16 26 27 28 29 39 40 41 42 53 54>;
        hold-trigger-on-release;
        tapping-term-ms = <175>;
    };

    HML: HML {
        compatible = "zmk,behavior-hold-tap";
        label = "HML";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        flavor = "tap-preferred";
        quick-tap-ms = <125>;
        hold-trigger-on-release;
        tapping-term-ms = <175>;
        hold-trigger-key-positions = <7 8 9 10 11 12 20 21 22 23 24 25 33 34 35 36 37 38 46 47 48 49 50 51 61 62 63 59 60>;
    };

    tap_preferred_layertap: tap_preferred_layertap {
        compatible = "zmk,behavior-hold-tap";
        label = "TAP_PREFERRED_LAYERTAP";
        bindings = <&mo>, <&kp>;

        #binding-cells = <2>;
        flavor = "tap-preferred";
        tapping-term-ms = <150>;
    };

    tap_preferred_modkey: tap_preferred_modkey {
        compatible = "zmk,behavior-hold-tap";
        label = "TAP_PREFERRED_MODKEY";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <150>;
        flavor = "tap-preferred";
    };

    apo_quote_tap: apo_quote_tap {
        compatible = "zmk,behavior-tap-dance";
        label = "APO_QUOTE_TAP";
        #binding-cells = <0>;
        bindings = <&kp SQT>, <&kp DOUBLE_QUOTES>;

        tapping-term-ms = <225>;
    };

    macros {
        email: email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp A &kp N &kp D &kp R &kp I &kp U &kp S &kp DOT &kp B &kp E &kp R &kp N &kp A &kp T &kp A &kp V &kp I &kp C &kp I &kp U &kp S &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "EMAIL";
        };

        LIACSMail: LIACSMail {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp A &kp DOT &kp B &kp E &kp R &kp N &kp A &kp T &kp A &kp V &kp I &kp C &kp I &kp U &kp S &kp AT &kp L &kp I &kp A &kp C &kp S &kp DOT &kp L &kp E &kp I &kp D &kp E &kp N &kp U &kp N &kp I &kp V &kp DOT &kp N &kp L>;
            label = "LIACSMAIL";
        };

        vscode_menu_mac: vscode_menu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RS(RG(P))>;
            label = "VSCODE_MENU";
        };
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        cmdshiftp {
            bindings = <&kp LG(LS(P))>;
            key-positions = <0 1>;
        };

        NumLayer {
            bindings = <&none>;
            key-positions = <43 44>;
        };

        QWERTY-Toggle {
            bindings = <&tog 0>;
            key-positions = <0 1 11 12>;
        };

        colemak-toggle {
            bindings = <&tog 1>;
            key-positions = <4 5 7 8>;
        };

        num_toggle {
            bindings = <&tog 3>;
            key-positions = <42 43 44>;
        };

        semicolor_combo {
            bindings = <&kp SEMI>;
            key-positions = <48 49>;
        };

        escape_tap_l {
            bindings = <&kp ESCAPE>;
            key-positions = <28 29 30>;
        };

        escape_tap_r {
            bindings = <&kp ESCAPE>;
            key-positions = <34 35 36>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Mac-QWERTY {
            bindings = <
&kp GRAVE     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                       &mmv MOVE_UP     &kp NUMBER_6                         &kp NUMBER_7                             &kp NUMBER_8  &kp NUMBER_9         &kp NUMBER_0      &kp BACKSLASH
&kp TAB       &kp Q         &kp W         &kp E         &kp R         &kp T                              &mmv MOVE_DOWN   &kp Y                                &kp U                                    &kp I         &kp O                &kp P             &minus_plus_tap
&lt 4 ESCAPE  &kp A         &kp S         &kp D         &kp F         &kp G                              &mmv MOVE_LEFT   &kp H                                &kp J                                    &kp K         &kp L                &colon_semicolon  &apo_quote_tap
&kp LSHFT     &kp Z         &x_equal_tap  &kp C         &kp V         &kp B                              &mmv MOVE_RIGHT  &kp N                                &kp M                                    &kp COMMA     &kp DOT              &kp SLASH         &kp UNDER
&mkp RCLK     &kp LCTRL     &kp LEFT_ALT  &mo 10        &mo 2         &tap_preferred_layertap 3 SPACE    &mkp LCLK        &tap_preferred_layertap 3 BACKSPACE  &tap_preferred_modkey RIGHT_SHIFT ENTER  &bl BL_ON     &kp RG(RIGHT_SHIFT)  &tog 3
            >;

            sensor-bindings = <&scroll_encoder2>;
            display-name = "LAYER0";
        };

        colemak-dh {
            bindings = <
&kp GRAVE     &kp N1     &kp N2        &kp N3  &kp N4  &kp N5                             &trans  &kp N6                               &kp N7                                   &kp N8     &kp N9         &kp N0    &kp BSLH
&kp TAB       &kp Q      &kp W         &kp F   &kp P   &kp B                              &trans  &kp J                                &kp L                                    &kp U      &kp Y          &kp SEMI  &minus_plus_tap
&lt 4 ESCAPE  &kp A      &kp R         &kp S   &kp T   &kp G                              &trans  &kp M                                &kp N                                    &kp E      &kp I          &kp O     &apo_quote_tap
&kp LSHFT     &kp Z      &x_equal_tap  &kp C   &kp D   &kp V                              &trans  &kp K                                &kp H                                    &kp COMMA  &kp DOT        &kp FSLH  &kp UNDERSCORE
&kp MINUS     &kp LCTRL  &kp LALT      &mo 10  &mo 2   &tap_preferred_layertap 3 SPACE    &trans  &tap_preferred_layertap 3 BACKSPACE  &tap_preferred_modkey RIGHT_SHIFT ENTER  &kp RSHFT  &kp LG(RSHFT)  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        symbols {
            bindings = <
&kp GRAVE     &kp F1      &kp F2          &kp F3        &kp F4         &kp F5         &mmv MOVE_UP     &kp F6         &kp F7                &kp F8                 &kp F9            &kp F10       &kp BACKSLASH
&kp TILDE     &kp EXCL    &kp HOME        &kp UP_ARROW  &kp END        &kp DOLLAR     &mmv MOVE_DOWN   &kp ASTERISK   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp GRAVE         &kp SEMI      &minus_plus_tap
&lt 5 ESCAPE  &kp AT      &kp LEFT_ARROW  &kp DOWN      &kp RIGHT      &kp HASH       &mmv MOVE_LEFT   &kp CARET      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AMPERSAND     &kp COLON     &kp DOUBLE_QUOTES
&trans        &kp DELETE  &kp EQUAL       &kp PAGE_UP   &kp PAGE_DOWN  &kp PERCENT    &mmv MOVE_RIGHT  &kp LESS_THAN  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp GREATER_THAN  &kp QUESTION  &kp UNDER
&kp C_MUTE    &trans      &trans          &trans        &trans         &trans         &mkp LCLK        &kp BACKSPACE  &kp SPACE             &kp SPACE              &trans            &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        Numerical {
            display-name = "layer1";
            bindings = <
&kp GRAVE     &kp F1     &kp F2        &kp F3        &kp F4        &kp F5       &mmv MOVE_UP     &kp F6         &kp F7                &kp F8                 &kp F9     &kp F10    &kp BACKSLASH
&trans        &kp SLASH  &kp N7        &kp NUMBER_8  &kp NUMBER_9  &kp ASTRK    &mmv MOVE_DOWN   &kp ASTERISK   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp GRAVE  &kp SEMI   &minus_plus_tap
&lt 5 ESCAPE  &kp MINUS  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS     &mmv MOVE_LEFT   &kp PERCENT    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AMPS   &kp COLON  &kp DOUBLE_QUOTES
&trans        &kp N0     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL    &mmv MOVE_RIGHT  &kp EQUAL      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp COMMA  &kp DOT    &trans
&kp C_MUTE    &kp COMMA  &kp NUMBER_0  &kp PERIOD    &kp SPACE     &trans       &mkp LCLK        &kp BACKSPACE  &kp SPACE             &kp SPACE              &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        numrow {
            bindings = <
&kp ESCAPE     &kp F1      &kp F2      &kp F3      &kp F4      &kp F5        &mmv MOVE_UP    &kp F6             &kp F7      &kp F8               &kp F9      &kp F10     &kp F11
&kp BACKSPACE  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)    &mmv MOVE_DOWN  &kp LS(N6)         &kp LS(N7)  &kp LS(N8)           &kp LS(N9)  &kp LS(N0)  &kp F12
&trans         &kp N1      &kp N2      &kp N3      &kp N4      &kp N5        &mmv MOVE_LEFT  &kp N6             &kp N7      &kp N8               &kp N9      &kp N0      &kp F12
&trans         &kp F1      &kp F2      &kp F3      &kp F4      &kp F5        &kp F6          &kp F6             &kp F7      &kp F8               &kp F9      &kp F10     &kp F11
&trans         &kp LCTRL   &kp LALT    &kp LGUI    &mo 5       &kp ENTER     &mkp LCLK       &kp LA(BACKSPACE)  &trans      &kp RA(RIGHT_SHIFT)  &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        sys-control {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2        &bt BT_SEL 3     &bt BT_SEL 4         &rgb_ug RGB_EFF  &trans           &trans                            &trans                             &trans                             &trans                            &trans
&trans  &kp C_REWIND  &kp C_VOL_UP  &kp C_FAST_FORWARD  &rgb_ug RGB_TOG  &ext_power EP_TOG    &trans           &rgb_ug RGB_HUI  &rgb_ug RGB_HUD                   &trans                             &trans                             &trans                            &trans
&trans  &kp C_PREV    &kp C_VOL_DN  &kp C_NEXT          &mkp MB1         &out OUT_TOG         &trans           &rgb_ug RGB_SAI  &rgb_ug RGB_SAD                   &rgb_ug RGB_COLOR_HSB(77,74,62)    &rgb_ug RGB_COLOR_HSB(205,100,39)  &rgb_ug RGB_COLOR_HSB(147,99,44)  &trans
&trans  &kp C_STOP    &kp C_MUTE    &kp C_PLAY_PAUSE    &mkp MB2         &sys_reset           &trans           &rgb_ug RGB_EFF  &rgb_ug RGB_COLOR_HSB(169,88,31)  &rgb_ug RGB_COLOR_HSB(286,100,50)  &rgb_ug RGB_COLOR_HSB(237,44,39)   &rgb_ug RGB_COLOR_HSB(32,64,69)   &rgb_ug RGB_COLOR_HSB(5,100,68)
&tog 6  &trans        &trans        &trans              &trans           &trans               &trans           &mkp MB1         &mkp RCLK                         &trans                             &trans                             &trans
            >;

            sensor-bindings = <&inc_dec_kp 0 0>;
        };

        Windows_linux {
            display-name = "LAYER0";
            bindings = <
&kp GRAVE     &kp N1        &kp N2        &kp N3            &kp N4  &kp N5       &mmv MOVE_UP     &kp N6         &kp N7     &kp N8     &kp N9                 &kp N0      &kp BACKSLASH
&kp TAB       &kp Q         &kp W         &kp E             &kp R   &kp T        &mmv MOVE_DOWN   &kp Y          &kp U      &kp I      &kp O                  &kp P       &kp MINUS
&lt 8 ESCAPE  &kp A         &kp S         &kp D             &kp F   &kp G        &mmv MOVE_LEFT   &kp H          &kp J      &kp K      &kp L                  &kp SEMI    &kp APOS
&kp LSHFT     &kp Z         &kp X         &kp C             &kp V   &kp B        &mmv MOVE_RIGHT  &kp N          &kp M      &kp COMMA  &kp DOT                &kp FSLH    &kp RIGHT_SHIFT
&mkp RCLK     &kp LEFT_ALT  &kp LEFT_GUI  &kp LEFT_CONTROL  &mo 7   &kp SPACE    &mkp LCLK        &kp BACKSPACE  &kp ENTER  &mo 7      &kp RS(RIGHT_CONTROL)  &kp DELETE
            >;

            sensor-bindings = <&scroll_encoder2>;
        };

        win-symbols {
            display-name = "layer1";
            bindings = <
&kp GRAVE     &kp F1           &kp F2        &kp F3     &kp F4            &kp F5               &mmv MOVE_UP     &kp F6          &kp F7           &kp F8            &kp F9                &kp F10                &kp BACKSLASH
&trans        &kp EXCLAMATION  &kp AT_SIGN   &kp HASH   &kp DOLLAR        &kp PERCENT          &mmv MOVE_DOWN   &kp CARET       &kp AMPERSAND    &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PLUS
&lt 9 ESCAPE  &kp NUMBER_1     &kp NUMBER_2  &kp N3     &kp N4            &kp N5               &mmv MOVE_LEFT   &kp N6          &kp N7           &kp N8            &kp N9                &kp N0                 &kp EQUAL
&trans        &kp PLUS         &kp TILDE     &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET    &mmv MOVE_RIGHT  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp SLASH              &trans
&kp C_MUTE    &trans           &trans        &trans     &trans            &trans               &mkp LCLK        &trans          &trans           &trans            &trans                &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        win-navigation {
            bindings = <
&kp ESCAPE     &kp F1          &kp F2          &kp F3           &kp F4           &kp F5        &mmv MOVE_UP     &kp F6         &kp F7          &kp F8          &kp F9           &kp F10      &kp F11
&kp BACKSPACE  &kp HOME        &kp UP_ARROW    &kp END          &none            &kp K_LOCK    &mmv MOVE_DOWN   &kp PAGE_UP    &kp HOME        &kp UP_ARROW    &kp END          &kp UNDER    &kp F12
&trans         &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PRINTSCREEN  &trans        &mmv MOVE_LEFT   &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LBRC     &kp RBRC
&trans         &kp DELETE      &kp PAGE_UP     &kp PAGE_DOWN    &trans           &trans        &mmv MOVE_RIGHT  &tog 0         &tog 1          &sys_reset      &soft_off        &bootloader  &trans
&tog 0         &trans          &trans          &trans           &mo 9            &kp ENTER     &mkp LCLK        &kp DELETE     &trans          &trans          &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        win-system {
            bindings = <
&trans  &bt BT_SEL 0    &bt BT_SEL 1       &bt BT_SEL 2        &bt BT_SEL 3          &bt BT_SEL 4         &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp C_REWIND    &kp C_VOLUME_UP    &kp C_FAST_FORWARD  &rgb_ug RGB_TOG       &ext_power EP_TOG    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp K_PREVIOUS  &kt K_VOLUME_DOWN  &kp C_NEXT          &kp C_BRIGHTNESS_INC  &out OUT_TOG         &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans          &kp C_MUTE         &kp K_PLAY_PAUSE    &kp C_BRIGHTNESS_DEC  &sys_reset           &trans  &trans  &trans  &trans  &trans  &trans  &trans
&tog 0  &trans          &trans             &trans              &trans                &tog 0               &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        COMMAND_LAYER_MAC {
            display-name = "LAYER0";
            bindings = <
&kp GRAVE       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3      &kp NUMBER_4  &kp NUMBER_5    &mmv MOVE_UP     &kp NUMBER_6       &kp NUMBER_7   &kp NUMBER_8     &kp NUMBER_9         &kp NUMBER_0      &kp BACKSLASH
&kp LG(TAB)     &kp LG(Q)     &kp LG(W)     &kp LG(E)         &kp LG(R)     &kp LG(T)       &mmv MOVE_DOWN   &kp LG(Y)          &kp LG(U)      &kp LG(I)        &kp LG(O)            &kp LG(P)         &kp LG(MINUS)
&kp LG(ESCAPE)  &kp LG(A)     &kp LG(S)     &kp LG(D)         &kp LG(F)     &kp LG(G)       &kp RIGHT        &kp LG(H)          &kp LG(J)      &kp LG(K)        &kp LG(L)            &colon_semicolon  &kp APOS
&kp LSHFT       &kp LG(Z)     &kp LG(X)     &kp LG(C)         &kp LG(V)     &kp LG(B)       &mmv MOVE_RIGHT  &kp LG(N)          &kp LG(M)      &kp LG(COMMA)    &kp LG(DOT)          &kp SLASH         &kp UNDER
&mkp RCLK       &kp LCTRL     &kp LEFT_ALT  &kp LEFT_COMMAND  &mo 2         &lt 3 SPACE     &mkp LCLK        &kp LG(BACKSPACE)  &kp LG(ENTER)  &kp RIGHT_SHIFT  &kp RG(RIGHT_SHIFT)  &kp DELETE
            >;

            sensor-bindings = <&scroll_encoder2>;
        };
    };
};
